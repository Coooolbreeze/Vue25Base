(function (window) { var svgSprite = '<svg>' + '' + '<symbol id="icon-search" viewBox="0 0 1024 1024">' + '' + '<path d="M1011.46 951.127L829.836 769.503A465.73 465.73 0 0 0 938.63 469.996c0-258.421-210.551-468.63-469.313-468.63S0.004 211.574 0.004 469.995s210.551 468.63 469.314 468.63c114.085 0 218.742-40.958 300.19-108.795l181.624 181.624a42.537 42.537 0 0 0 60.328 0 42.622 42.622 0 0 0 0-60.328z m-542.142-97.83c-211.703 0-383.984-171.94-383.984-383.301S257.614 86.695 469.318 86.695c211.745 0 383.983 171.94 383.983 383.3S681.063 853.298 469.318 853.298z" fill="" ></path>' + '' + '</symbol>' + '' + '</svg>'; var script = (function () { var scripts = document.getElementsByTagName('script'); return scripts[scripts.length - 1] }()); var shouldInjectCss = script.getAttribute('data-injectcss'); var ready = function (fn) { if (document.addEventListener) { if (~['complete', 'loaded', 'interactive'].indexOf(document.readyState)) { setTimeout(fn, 0) } else { var loadFn = function () { document.removeEventListener('DOMContentLoaded', loadFn, false); fn() }; document.addEventListener('DOMContentLoaded', loadFn, false) } } else if (document.attachEvent) { IEContentLoaded(window, fn) } function IEContentLoaded (w, fn) { var d = w.document; var done = false; var init = function () { if (!done) { done = true; fn() } }; var polling = function () { try { d.documentElement.doScroll('left') } catch (e) { setTimeout(polling, 50); return } init() }; polling(); d.onreadystatechange = function () { if (d.readyState === 'complete') { d.onreadystatechange = null; init() } } } }; var before = function (el, target) { target.parentNode.insertBefore(el, target) }; var prepend = function (el, target) { if (target.firstChild) { before(el, target.firstChild) } else { target.appendChild(el) } }; function appendSvg () { var div, svg; div = document.createElement('div'); div.innerHTML = svgSprite; svgSprite = null; svg = div.getElementsByTagName('svg')[0]; if (svg) { svg.setAttribute('aria-hidden', 'true'); svg.style.position = 'absolute'; svg.style.width = 0; svg.style.height = 0; svg.style.overflow = 'hidden'; prepend(svg, document.body) } } if (shouldInjectCss && !window.__iconfont__svg__cssinject__) { window.__iconfont__svg__cssinject__ = true; try { document.write('<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>') } catch (e) { console && console.log(e) } } ready(appendSvg) })(window)
